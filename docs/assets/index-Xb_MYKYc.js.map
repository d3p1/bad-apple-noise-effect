{"version":3,"file":"index-Xb_MYKYc.js","sources":["../../src/media/videos/bad-apple.mp4","../../src/js/app.ts"],"sourcesContent":["export default \"__VITE_ASSET__DkpBLohz__\"","/**\n * @description App\n * @author      C. M. de Picciotto <d3p1@d3p1.dev> (https://d3p1.dev/)\n */\nimport badAppleVideo from '../media/videos/bad-apple.mp4'\n\nclass App {\n  /**\n   * @type {HTMLCanvasElement}\n   */\n  #canvas: HTMLCanvasElement\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  #context: CanvasRenderingContext2D\n\n  /**\n   * @type {HTMLVideoElement}\n   */\n  #video: HTMLVideoElement\n\n  /**\n   * @type {number | null}\n   */\n  #animationId: number | null = null\n\n  /**\n   * Constructor\n   */\n  constructor() {\n    this.#initCanvas()\n    this.#initVideo()\n  }\n\n  /**\n   * Run effect\n   *\n   * @returns {void}\n   */\n  #run(): void {\n    const oldImgData = this.#getImgData()\n\n    this.#context.clearRect(0, 0, this.#canvas.width, this.#canvas.height)\n\n    this.#context.drawImage(\n      this.#video,\n      0,\n      0,\n      this.#canvas.width,\n      this.#canvas.height,\n    )\n\n    this.#postProcessing(oldImgData.data)\n\n    this.#animationId = requestAnimationFrame(this.#run.bind(this))\n  }\n\n  /**\n   * Post-processing effect\n   *\n   * @param   {Uint8ClampedArray} oldData\n   * @returns {void}\n   * @note    It is considered that processing data is white and black,\n   *          so it is only checked the red channel to validate pixel color\n   */\n  #postProcessing(oldData: Uint8ClampedArray): void {\n    const currentImgData = this.#getImgData()\n    const currentData = currentImgData.data\n\n    for (let i = 0; i < currentData.length; i += 4) {\n      if (currentData[i] === 0) {\n        const noise = this.#generateNoise()\n        currentData[i] = noise\n        currentData[i + 1] = noise\n        currentData[i + 2] = noise\n      } else {\n        currentData[i] = oldData[i]\n        currentData[i + 1] = oldData[i + 1]\n        currentData[i + 2] = oldData[i + 2]\n      }\n    }\n\n    this.#context.putImageData(currentImgData, 0, 0)\n  }\n\n  /**\n   * Generate noise\n   *\n   * @returns {void}\n   */\n  #generateNoise(): number {\n    return Math.random() * 255\n  }\n\n  /**\n   * Play video\n   *\n   * @returns {void}\n   */\n  #playVideo(): void {\n    this.#video.play().then(() => {\n      this.#run()\n    })\n  }\n\n  /**\n   * Pause video\n   *\n   * @returns {void}\n   */\n  #pauseVideo(): void {\n    if (this.#animationId) {\n      cancelAnimationFrame(this.#animationId)\n      this.#video.pause()\n    }\n  }\n\n  /**\n   * Init video\n   *\n   * @returns {void}\n   */\n  #initVideo(): void {\n    this.#video = document.createElement('video')\n    this.#video.src = badAppleVideo\n    this.#video.muted = true\n\n    this.#video.addEventListener('loadeddata', () => {\n      this.#canvas.width = this.#video.videoWidth\n      this.#canvas.height = this.#video.videoHeight\n\n      this.#canvas.addEventListener('click', () => {\n        if (this.#video.paused) {\n          this.#playVideo()\n        } else {\n          this.#pauseVideo()\n        }\n      })\n\n      this.#playVideo()\n    })\n  }\n\n  /**\n   * Init canvas\n   *\n   * @returns {void}\n   */\n  #initCanvas(): void {\n    this.#canvas = document.createElement('canvas')\n    this.#context = this.#canvas.getContext('2d', {\n      willReadFrequently: true,\n    }) as CanvasRenderingContext2D\n\n    this.#canvas.style.border = '2px solid black'\n    document.body.appendChild(this.#canvas)\n  }\n\n  /**\n   * Get image data\n   *\n   * @returns {void}\n   */\n  #getImgData(): ImageData {\n    return this.#context.getImageData(\n      0,\n      0,\n      this.#canvas.width,\n      this.#canvas.height,\n    )\n  }\n}\n\nnew App()\n"],"names":["badAppleVideo","App","__privateAdd","_App_instances","_canvas","_context","_video","_animationId","__privateMethod","initCanvas_fn","initVideo_fn","run_fn","oldImgData","getImgData_fn","__privateGet","postProcessing_fn","__privateSet","oldData","currentImgData","currentData","i","noise","generateNoise_fn","playVideo_fn","pauseVideo_fn"],"mappings":"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"}